// Generated by CoffeeScript 1.3.3
(function() {

  describe('Activities Controller', function() {
    it('should respond to getting a status report', function() {
      return expect(Breeze.Activities.statusReport()).toBeDefined();
    });
    it('should have the correct status information available', function() {
      return expect(Breeze.Activities.statusReport().playlistRunning).toBeDefined();
    });
    describe('Select desired playlist and get activities', function() {
      it('should respond to selecting a playlist', function() {
        return expect(Breeze.Activities.selectPlaylist()).toBeDefined();
      });
      return it('should return activities for selected playlist', function() {
        return expect(Breeze.Activities.getActivities()).toBeDefined();
      });
    });
    describe('Playlist controlls', function() {
      it('should respond to starting a playlist', function() {
        return expect(Breeze.Activities.startPlaylist()).toBeDefined();
      });
      it('should serve up the next activity', function() {
        return expect(Breeze.Activities.serveNextActivity()).toBeDefined();
      });
      it('should start served up activity', function() {
        return expect(Breeze.Activities.startActivity()).toBeDefined();
      });
      it('should be able to snooze served up activity', function() {
        return expect(Breeze.Activities.snoozeActivity()).toBeDefined();
      });
      it('should pause current playlist and activity', function() {
        return expect(Breeze.Activities.pausePlaylist()).toBeDefined();
      });
      return it('should stop current playlist', function() {
        return expect(Breeze.Activities.stopPlaylist()).toBeDefined();
      });
    });
    describe('Complete activity', function() {
      it('should complete activity when time runs out', function() {
        return expect(Breeze.Activities.completeActivity()).toBeDefined();
      });
      it('should complete activity when instant complete is clicked', function() {
        return expect(Breeze.Activities.completeActivity()).toBeDefined();
      });
      it('should allow rewind on activity', function() {
        return expect(Breeze.Activities.rewindActivity()).toBeDefined();
      });
      return it('should allow add time on activity', function() {
        return expect(Breeze.Activities.addTimeToActivity()).toBeDefined();
      });
    });
    return describe('Log events on activities', function() {
      return it('should respond to logging events', function() {
        return expect(Breeze.Activities.logOnActivity()).toBeDefined();
      });
    });
  });

}).call(this);
